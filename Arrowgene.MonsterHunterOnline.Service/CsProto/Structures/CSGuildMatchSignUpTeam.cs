/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 猎团报名数据
    /// </summary>
    public class CSGuildMatchSignUpTeam : IStructure
    {

        public CSGuildMatchSignUpTeam()
        {
            MatchID = 0;
            SignUpID = 0;
            SignUpTM = 0;
            GuildID = 0;
            GuildName = "";
            BestScore = 0;
            BestScoreTm = 0;
            AcceptRound = 0;
            TeamName = "";
            Members = new List<CSGuildMatchSignUpTeamMember>();
        }

        /// <summary>
        /// 猎团战斗ID
        /// </summary>
        public int MatchID;

        /// <summary>
        /// 报名ID
        /// </summary>
        public uint SignUpID;

        /// <summary>
        /// 报名时间
        /// </summary>
        public int SignUpTM;

        /// <summary>
        /// 工会ID
        /// </summary>
        public ulong GuildID;

        /// <summary>
        /// 猎团名
        /// </summary>
        public string GuildName;

        /// <summary>
        /// 最好成绩
        /// </summary>
        public int BestScore;

        /// <summary>
        /// 最好成绩时间
        /// </summary>
        public int BestScoreTm;

        /// <summary>
        /// 轮次
        /// </summary>
        public byte AcceptRound;

        /// <summary>
        /// 队伍名
        /// </summary>
        public string TeamName;

        /// <summary>
        /// 一起报名的最多人数
        /// </summary>
        public List<CSGuildMatchSignUpTeamMember> Members;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(MatchID, Endianness.Big);
            buffer.WriteUInt32(SignUpID, Endianness.Big);
            buffer.WriteInt32(SignUpTM, Endianness.Big);
            buffer.WriteUInt64(GuildID, Endianness.Big);
            buffer.WriteInt32(GuildName.Length + 1, Endianness.Big);
            buffer.WriteCString(GuildName);
            buffer.WriteInt32(BestScore, Endianness.Big);
            buffer.WriteInt32(BestScoreTm, Endianness.Big);
            buffer.WriteByte(AcceptRound);
            buffer.WriteInt32(TeamName.Length + 1, Endianness.Big);
            buffer.WriteCString(TeamName);
            uint membersCount = (uint)Members.Count;
            buffer.WriteUInt32(membersCount, Endianness.Big);
            for (int i = 0; i < membersCount; i++)
            {
                Members[i].Write(buffer);
            }
        }

    }
}
