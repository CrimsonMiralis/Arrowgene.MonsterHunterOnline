/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// Instance initialize info
    /// </summary>
    public class CSInstanceInitInfo : IStructure
    {

        public CSInstanceInitInfo()
        {
            BattleGroundID = 0;
            LevelID = 0;
            CreateMaxPlayerCount = 0;
            GameMode = 0;
            TimeType = 0;
            WeatherType = 0;
            time = 0.0f;
            LevelRandSeed = 0;
            WarningFlag = 0;
            CreatePlayerMaxLv = 0;
        }

        /// <summary>
        /// BattleGround ID
        /// </summary>
        public int BattleGroundID;

        /// <summary>
        /// Level id
        /// </summary>
        public int LevelID;

        /// <summary>
        /// 创建副本的玩家数量
        /// </summary>
        public int CreateMaxPlayerCount;

        public int GameMode;

        /// <summary>
        /// 关卡时间
        /// </summary>
        public int TimeType;

        /// <summary>
        /// 关卡天气
        /// </summary>
        public int WeatherType;

        public float time;

        /// <summary>
        /// 关卡内数据随机种子，特定系统专用
        /// </summary>
        public int LevelRandSeed;

        /// <summary>
        /// 是否是warning
        /// </summary>
        public byte WarningFlag;

        /// <summary>
        /// 副本的玩家最大等级
        /// </summary>
        public int CreatePlayerMaxLv;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(BattleGroundID, Endianness.Big);
            buffer.WriteInt32(LevelID, Endianness.Big);
            buffer.WriteInt32(CreateMaxPlayerCount, Endianness.Big);
            buffer.WriteInt32(GameMode, Endianness.Big);
            buffer.WriteInt32(TimeType, Endianness.Big);
            buffer.WriteInt32(WeatherType, Endianness.Big);
            buffer.WriteFloat(time, Endianness.Big);
            buffer.WriteInt32(LevelRandSeed, Endianness.Big);
            buffer.WriteByte(WarningFlag);
            buffer.WriteInt32(CreatePlayerMaxLv, Endianness.Big);
        }

    }
}
