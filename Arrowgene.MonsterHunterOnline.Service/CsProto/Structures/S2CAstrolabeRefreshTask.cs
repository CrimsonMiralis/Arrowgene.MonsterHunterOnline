/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    public class S2CAstrolabeRefreshTask : IStructure
    {

        public S2CAstrolabeRefreshTask()
        {
            RefreshTimes = 0;
            Tasks = new List<int>();
            Prizes = new List<int>();
            CompleteTasks = new List<int>();
            LastSubmitTaskTime = 0;
            TaskDoDayNum = 0;
            TaskBuyDayNum = 0;
        }

        /// <summary>
        /// 重置次数
        /// </summary>
        public int RefreshTimes;

        /// <summary>
        /// 任务集
        /// </summary>
        public List<int> Tasks;

        /// <summary>
        /// 任务系数集
        /// </summary>
        public List<int> Prizes;

        /// <summary>
        /// 已完成任务集
        /// </summary>
        public List<int> CompleteTasks;

        /// <summary>
        /// 最后一次提交星盘任务时间
        /// </summary>
        public uint LastSubmitTaskTime;

        /// <summary>
        /// 参与星盘任务日数
        /// </summary>
        public int TaskDoDayNum;

        /// <summary>
        /// 已付费购买任务完成组次数
        /// </summary>
        public int TaskBuyDayNum;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(RefreshTimes, Endianness.Big);
            int tasksCount = (int)Tasks.Count;
            buffer.WriteInt32(tasksCount, Endianness.Big);
            for (int i = 0; i < tasksCount; i++)
            {
                buffer.WriteInt32(Tasks[i], Endianness.Big);
            }
            int prizesCount = (int)Prizes.Count;
            buffer.WriteInt32(prizesCount, Endianness.Big);
            for (int i = 0; i < prizesCount; i++)
            {
                buffer.WriteInt32(Prizes[i], Endianness.Big);
            }
            int completeTasksCount = (int)CompleteTasks.Count;
            buffer.WriteInt32(completeTasksCount, Endianness.Big);
            for (int i = 0; i < completeTasksCount; i++)
            {
                buffer.WriteInt32(CompleteTasks[i], Endianness.Big);
            }
            buffer.WriteUInt32(LastSubmitTaskTime, Endianness.Big);
            buffer.WriteInt32(TaskDoDayNum, Endianness.Big);
            buffer.WriteInt32(TaskBuyDayNum, Endianness.Big);
        }

    }
}
