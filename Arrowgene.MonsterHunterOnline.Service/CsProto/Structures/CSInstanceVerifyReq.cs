/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 进入战斗副本验证请求
    /// </summary>
    public class CSInstanceVerifyReq : IStructure
    {

        public CSInstanceVerifyReq()
        {
            Uin = 0;
            PVPMode = 0;
            VerifyType = 0;
            RoleID = 0;
            ServiceID = 0;
            Key = "";
            ProtoVer = 0;
            Reserve1 = 0;
            Reserve2 = 0;
        }

        /// <summary>
        /// qq号
        /// </summary>
        public uint Uin;

        public int PVPMode;

        /// <summary>
        /// 验证类型，正常验证0，battle直接连接测试验证1
        /// </summary>
        public int VerifyType;

        /// <summary>
        /// 角色ID
        /// </summary>
        public int RoleID;

        /// <summary>
        /// TDR连接的BS ID
        /// </summary>
        public int ServiceID;

        /// <summary>
        /// 验证码
        /// </summary>
        public string Key;

        /// <summary>
        /// 客户端当前的协议版本号
        /// </summary>
        public int ProtoVer;

        /// <summary>
        /// 保留字段1,由于此条协议用于客户端服务器的版本交换，故不支持版本裁剪
        /// </summary>
        public int Reserve1;

        /// <summary>
        /// 保留字段2,由于此条协议用于客户端服务器的版本交换，故不支持版本裁剪
        /// </summary>
        public int Reserve2;

        public void Write(IBuffer buffer)
        {
            buffer.WriteUInt32(Uin, Endianness.Big);
            buffer.WriteInt32(PVPMode, Endianness.Big);
            buffer.WriteInt32(VerifyType, Endianness.Big);
            buffer.WriteInt32(RoleID, Endianness.Big);
            buffer.WriteInt32(ServiceID, Endianness.Big);
            buffer.WriteInt32(Key.Length + 1, Endianness.Big);
            buffer.WriteCString(Key);
            buffer.WriteInt32(ProtoVer, Endianness.Big);
            buffer.WriteInt32(Reserve1, Endianness.Big);
            buffer.WriteInt32(Reserve2, Endianness.Big);
        }

    }
}
