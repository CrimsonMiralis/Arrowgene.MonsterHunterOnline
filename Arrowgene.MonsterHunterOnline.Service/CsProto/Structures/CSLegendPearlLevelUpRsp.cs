/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 升级传奇技能珠-应答
    /// </summary>
    public class CSLegendPearlLevelUpRsp : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSLegendPearlLevelUpRsp));

        public CSLegendPearlLevelUpRsp()
        {
            ErrCode = 0;
            ItemID = 0;
            Column = 0;
            Grid = 0;
            ReserveAbilityInfo = new LAbilityInfo();
            LevelUpFlag = 0;
        }

        /// <summary>
        /// 错误码
        /// </summary>
        public int ErrCode;

        /// <summary>
        /// 传奇技能珠物品实例
        /// </summary>
        public ulong ItemID;

        /// <summary>
        /// 技能珠所在栏位
        /// </summary>
        public byte Column;

        /// <summary>
        /// 技能珠所在格子
        /// </summary>
        public ushort Grid;

        /// <summary>
        /// 备用修正能力
        /// </summary>
        public LAbilityInfo ReserveAbilityInfo;

        /// <summary>
        /// 是否升级成功，0：失败，1：成功
        /// </summary>
        public byte LevelUpFlag;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(ErrCode, Endianness.Big);
            buffer.WriteUInt64(ItemID, Endianness.Big);
            buffer.WriteByte(Column);
            buffer.WriteUInt16(Grid, Endianness.Big);
            ReserveAbilityInfo.Write(buffer);
            buffer.WriteByte(LevelUpFlag);
        }

        public void Read(IBuffer buffer)
        {
            ErrCode = buffer.ReadInt32(Endianness.Big);
            ItemID = buffer.ReadUInt64(Endianness.Big);
            Column = buffer.ReadByte();
            Grid = buffer.ReadUInt16(Endianness.Big);
            ReserveAbilityInfo.Read(buffer);
            LevelUpFlag = buffer.ReadByte();
        }

    }
}
