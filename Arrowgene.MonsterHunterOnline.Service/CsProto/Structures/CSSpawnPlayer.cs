/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 创建客户端玩家响应
    /// </summary>
    public class CSSpawnPlayer : IStructure
    {

        public CSSpawnPlayer()
        {
            PlayerId = 0;
            NetObjId = 0;
            Name = "";
            Gender = 0;
            Position = new XYZPosition();
            Rotation = new Quaternion();
            Scale = 0.0f;
            NewConnect = 0;
            SendSrvId = 0;
            EquipmentPack = "";
            AvatarSetID = 0;
        }

        /// <summary>
        /// 分配给玩家的ID号
        /// </summary>
        public uint PlayerId;

        /// <summary>
        /// Net object id assigned by server
        /// </summary>
        public uint NetObjId;

        /// <summary>
        /// 角色名
        /// </summary>
        public string Name;

        /// <summary>
        /// 性别
        /// </summary>
        public byte Gender;

        /// <summary>
        /// 出生点位置
        /// </summary>
        public XYZPosition Position;

        /// <summary>
        /// 出生点朝向
        /// </summary>
        public Quaternion Rotation;

        /// <summary>
        /// 缩放值
        /// </summary>
        public float Scale;

        /// <summary>
        /// 是否新创建的连接
        /// </summary>
        public uint NewConnect;

        /// <summary>
        /// 服务器转发SrvID 0 means broadcast other means specified sent srvid
        /// </summary>
        public uint SendSrvId;

        /// <summary>
        /// 装备名
        /// </summary>
        public string EquipmentPack;

        /// <summary>
        /// 套装ID
        /// </summary>
        public byte AvatarSetID;

        public void Write(IBuffer buffer)
        {
            buffer.WriteUInt32(PlayerId, Endianness.Big);
            buffer.WriteUInt32(NetObjId, Endianness.Big);
            buffer.WriteInt32(Name.Length + 1, Endianness.Big);
            buffer.WriteCString(Name);
            buffer.WriteByte(Gender);
            Position.Write(buffer);
            Rotation.Write(buffer);
            buffer.WriteFloat(Scale, Endianness.Big);
            buffer.WriteUInt32(NewConnect, Endianness.Big);
            buffer.WriteUInt32(SendSrvId, Endianness.Big);
            buffer.WriteInt32(EquipmentPack.Length + 1, Endianness.Big);
            buffer.WriteCString(EquipmentPack);
            buffer.WriteByte(AvatarSetID);
        }

    }
}
