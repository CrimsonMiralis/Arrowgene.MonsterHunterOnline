/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 设置陷阱请求
    /// </summary>
    public class CSSetTrapReq : IStructure
    {

        public CSSetTrapReq()
        {
            TrapID = 0;
            SpawnType = 0;
            Pose = new CSVec3();
            Rotation = new Quaternion();
            Bone = 0;
            Offset = new CSQuatT();
            Holder = 0;
            CEClassName = "";
            Param = 0;
        }

        /// <summary>
        /// 放置的TrapID
        /// </summary>
        public int TrapID;

        /// <summary>
        /// Spawn类型,0绝对位置,1相对骨骼位置
        /// </summary>
        public byte SpawnType;

        public CSVec3 Pose;

        public Quaternion Rotation;

        public int Bone;

        public CSQuatT Offset;

        /// <summary>
        /// 依附物体NetID
        /// </summary>
        public uint Holder;

        /// <summary>
        /// 对应CEClassName,在没有陷阱配置的情况下暂时放在这里
        /// </summary>
        public string CEClassName;

        /// <summary>
        /// 附加参数，根据生成类型解析
        /// </summary>
        public int Param;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(TrapID, Endianness.Big);
            buffer.WriteByte(SpawnType);
            Pose.Write(buffer);
            Rotation.Write(buffer);
            buffer.WriteInt32(Bone, Endianness.Big);
            Offset.Write(buffer);
            buffer.WriteUInt32(Holder, Endianness.Big);
            buffer.WriteInt32(CEClassName.Length + 1, Endianness.Big);
            buffer.WriteCString(CEClassName);
            buffer.WriteInt32(Param, Endianness.Big);
        }

    }
}
