/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 排行榜元数据
    /// </summary>
    public class Ranker : IStructure
    {

        public Ranker()
        {
            dbid = 0;
            name = "";
            uin = 0;
            str1 = "";
            arg1 = 0;
            arg2 = 0;
            arg3 = 0;
            param1 = 0;
            str2 = "";
            str3 = "";
            str4 = "";
        }

        /// <summary>
        /// dbid
        /// </summary>
        public ulong dbid;

        /// <summary>
        /// 名字
        /// </summary>
        public string name;

        /// <summary>
        /// uin
        /// </summary>
        public uint uin;

        /// <summary>
        /// 属性
        /// </summary>
        public string str1;

        /// <summary>
        /// 属性
        /// </summary>
        public int arg1;

        /// <summary>
        /// 属性
        /// </summary>
        public int arg2;

        /// <summary>
        /// 属性
        /// </summary>
        public int arg3;

        /// <summary>
        /// 属性
        /// </summary>
        public int param1;

        /// <summary>
        /// 扩展字段1
        /// </summary>
        public string str2;

        /// <summary>
        /// 扩展字段2
        /// </summary>
        public string str3;

        /// <summary>
        /// 扩展字段3
        /// </summary>
        public string str4;

        public void Write(IBuffer buffer)
        {
            buffer.WriteUInt64(dbid, Endianness.Big);
            buffer.WriteInt32(name.Length + 1, Endianness.Big);
            buffer.WriteCString(name);
            buffer.WriteUInt32(uin, Endianness.Big);
            buffer.WriteInt32(str1.Length + 1, Endianness.Big);
            buffer.WriteCString(str1);
            buffer.WriteInt32(arg1, Endianness.Big);
            buffer.WriteInt32(arg2, Endianness.Big);
            buffer.WriteInt32(arg3, Endianness.Big);
            buffer.WriteInt32(param1, Endianness.Big);
            buffer.WriteInt32(str2.Length + 1, Endianness.Big);
            buffer.WriteCString(str2);
            buffer.WriteInt32(str3.Length + 1, Endianness.Big);
            buffer.WriteCString(str3);
            buffer.WriteInt32(str4.Length + 1, Endianness.Big);
            buffer.WriteCString(str4);
        }

    }
}
