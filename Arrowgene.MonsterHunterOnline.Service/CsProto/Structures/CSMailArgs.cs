/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    public class CSMailArgs : IStructure
    {

        public CSMailArgs()
        {
            type = 0;
            receiver = "";
            title = "";
            content = "";
            money = 0;
            items = new List<CSAccItemInfo>();
            interactive = 0;
        }

        /// <summary>
        /// 邮件类型
        /// </summary>
        public int type;

        /// <summary>
        /// 收件人
        /// </summary>
        public string receiver;

        /// <summary>
        /// 邮件标题名称长度
        /// </summary>
        public string title;

        /// <summary>
        /// 邮件正文长度
        /// </summary>
        public string content;

        /// <summary>
        /// 附件金钱
        /// </summary>
        public ulong money;

        /// <summary>
        /// 附件物品
        /// </summary>
        public List<CSAccItemInfo> items;

        /// <summary>
        /// 是否进行交互检查
        /// </summary>
        public byte interactive;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(type, Endianness.Big);
            buffer.WriteInt32(receiver.Length + 1, Endianness.Big);
            buffer.WriteCString(receiver);
            buffer.WriteInt32(title.Length + 1, Endianness.Big);
            buffer.WriteCString(title);
            buffer.WriteInt32(content.Length + 1, Endianness.Big);
            buffer.WriteCString(content);
            buffer.WriteUInt64(money, Endianness.Big);
            int itemsCount = (int)items.Count;
            buffer.WriteInt32(itemsCount, Endianness.Big);
            for (int i = 0; i < itemsCount; i++)
            {
                items[i].Write(buffer);
            }
            buffer.WriteByte(interactive);
        }

    }
}
