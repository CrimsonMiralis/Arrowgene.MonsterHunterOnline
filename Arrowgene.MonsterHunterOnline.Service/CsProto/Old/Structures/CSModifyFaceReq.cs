/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Constant;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 付费重新捏脸请求
    /// </summary>
    public class CSModifyFaceReq : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSModifyFaceReq));

        public CSModifyFaceReq()
        {
            Uin = 0;
            DBID = 0;
            ChangeGender = 0;
            Gender = 0;
            FaceId = 0;
            HairId = 0;
            UnderclothesId = 0;
            SkinColor = 0;
            HairColor = 0;
            InnerColor = 0;
            EyeBall = 0;
            EyeColor = 0;
            FaceTattooIndex = 0;
            FaceTattooColor = 0;
            FacialInfo = new short[CsProtoConstant.CS_MAX_FACIALINFO_COUNT];
        }

        /// <summary>
        /// QQ号
        /// </summary>
        public uint Uin;

        /// <summary>
        /// 角色ID
        /// </summary>
        public ulong DBID;

        /// <summary>
        /// 角色是否变性
        /// </summary>
        public ushort ChangeGender;

        /// <summary>
        /// 角色性别
        /// </summary>
        public ushort Gender;

        /// <summary>
        /// 脸型ID
        /// </summary>
        public ushort FaceId;

        /// <summary>
        /// 发型ID
        /// </summary>
        public ushort HairId;

        /// <summary>
        /// 内衣ID
        /// </summary>
        public ushort UnderclothesId;

        /// <summary>
        /// 皮肤颜色
        /// </summary>
        public int SkinColor;

        /// <summary>
        /// 头发颜色
        /// </summary>
        public int HairColor;

        /// <summary>
        /// 内衣颜色
        /// </summary>
        public int InnerColor;

        /// <summary>
        /// 眼睛
        /// </summary>
        public int EyeBall;

        /// <summary>
        /// 眼睛颜色
        /// </summary>
        public int EyeColor;

        /// <summary>
        /// 脸部贴花
        /// </summary>
        public int FaceTattooIndex;

        /// <summary>
        /// 脸部贴花颜色
        /// </summary>
        public int FaceTattooColor;

        /// <summary>
        /// 捏脸数据集合
        /// </summary>
        public short[] FacialInfo;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteUInt32(Uin, Endianness.Big);
            buffer.WriteUInt64(DBID, Endianness.Big);
            buffer.WriteUInt16(ChangeGender, Endianness.Big);
            buffer.WriteUInt16(Gender, Endianness.Big);
            buffer.WriteUInt16(FaceId, Endianness.Big);
            buffer.WriteUInt16(HairId, Endianness.Big);
            buffer.WriteUInt16(UnderclothesId, Endianness.Big);
            buffer.WriteInt32(SkinColor, Endianness.Big);
            buffer.WriteInt32(HairColor, Endianness.Big);
            buffer.WriteInt32(InnerColor, Endianness.Big);
            buffer.WriteInt32(EyeBall, Endianness.Big);
            buffer.WriteInt32(EyeColor, Endianness.Big);
            buffer.WriteInt32(FaceTattooIndex, Endianness.Big);
            buffer.WriteInt32(FaceTattooColor, Endianness.Big);
            for (int i = 0; i < CsProtoConstant.CS_MAX_FACIALINFO_COUNT; i++)
            {
                buffer.WriteInt16(FacialInfo[i], Endianness.Big);
            }
        }

        public void ReadCs(IBuffer buffer)
        {
            Uin = buffer.ReadUInt32(Endianness.Big);
            DBID = buffer.ReadUInt64(Endianness.Big);
            ChangeGender = buffer.ReadUInt16(Endianness.Big);
            Gender = buffer.ReadUInt16(Endianness.Big);
            FaceId = buffer.ReadUInt16(Endianness.Big);
            HairId = buffer.ReadUInt16(Endianness.Big);
            UnderclothesId = buffer.ReadUInt16(Endianness.Big);
            SkinColor = buffer.ReadInt32(Endianness.Big);
            HairColor = buffer.ReadInt32(Endianness.Big);
            InnerColor = buffer.ReadInt32(Endianness.Big);
            EyeBall = buffer.ReadInt32(Endianness.Big);
            EyeColor = buffer.ReadInt32(Endianness.Big);
            FaceTattooIndex = buffer.ReadInt32(Endianness.Big);
            FaceTattooColor = buffer.ReadInt32(Endianness.Big);
            for (int i = 0; i < CsProtoConstant.CS_MAX_FACIALINFO_COUNT; i++)
            {
                FacialInfo[i] = buffer.ReadInt16(Endianness.Big);
            }
        }

    }
}
