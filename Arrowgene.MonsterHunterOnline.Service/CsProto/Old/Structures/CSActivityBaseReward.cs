/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 活动基础奖励
    /// </summary>
    public class CSActivityBaseReward : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSActivityBaseReward));

        public CSActivityBaseReward()
        {
            AddExp = 0;
            AddBindGold = 0;
            AddUnBindGold = 0;
            AddFarmPoint = 0;
            GuildAthPoint = 0;
            AddPetExp = 0;
            PetRoyalPoint = 0;
        }

        /// <summary>
        /// 经验
        /// </summary>
        public int AddExp;

        /// <summary>
        /// 绑银
        /// </summary>
        public int AddBindGold;

        /// <summary>
        /// 金币
        /// </summary>
        public int AddUnBindGold;

        /// <summary>
        /// 农场精算点
        /// </summary>
        public int AddFarmPoint;

        /// <summary>
        /// 猎团竞技点
        /// </summary>
        public int GuildAthPoint;

        /// <summary>
        /// 宠物经验
        /// </summary>
        public int AddPetExp;

        /// <summary>
        /// 宠物亲密度
        /// </summary>
        public int PetRoyalPoint;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt32(AddExp, Endianness.Big);
            buffer.WriteInt32(AddBindGold, Endianness.Big);
            buffer.WriteInt32(AddUnBindGold, Endianness.Big);
            buffer.WriteInt32(AddFarmPoint, Endianness.Big);
            buffer.WriteInt32(GuildAthPoint, Endianness.Big);
            buffer.WriteInt32(AddPetExp, Endianness.Big);
            buffer.WriteInt32(PetRoyalPoint, Endianness.Big);
        }

        public void ReadCs(IBuffer buffer)
        {
            AddExp = buffer.ReadInt32(Endianness.Big);
            AddBindGold = buffer.ReadInt32(Endianness.Big);
            AddUnBindGold = buffer.ReadInt32(Endianness.Big);
            AddFarmPoint = buffer.ReadInt32(Endianness.Big);
            GuildAthPoint = buffer.ReadInt32(Endianness.Big);
            AddPetExp = buffer.ReadInt32(Endianness.Big);
            PetRoyalPoint = buffer.ReadInt32(Endianness.Big);
        }

    }
}
