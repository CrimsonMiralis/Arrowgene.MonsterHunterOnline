/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 下发服务器组状态
    /// </summary>
    public class CSSvrStatusNtf : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSSvrStatusNtf));

        public CSSvrStatusNtf()
        {
            OnlinePlayerNum = 0;
            PlayerInTown = 0;
            PlayerInBattle = 0;
            ActiveInstanceCount = 0;
            PlayerInWaitQueue = 0;
            WorldFPS = 0.0f;
            TownFPS = new float[10];
            BattleFPS = new float[10];
        }

        /// <summary>
        /// GM命令名称
        /// </summary>
        public int OnlinePlayerNum;

        /// <summary>
        /// GM参数1
        /// </summary>
        public int PlayerInTown;

        /// <summary>
        /// GM参数2
        /// </summary>
        public int PlayerInBattle;

        /// <summary>
        /// 公告内容
        /// </summary>
        public int ActiveInstanceCount;

        /// <summary>
        /// 公告内容
        /// </summary>
        public int PlayerInWaitQueue;

        /// <summary>
        /// WorldSvr FPS
        /// </summary>
        public float WorldFPS;

        /// <summary>
        /// TownSvr FPS
        /// </summary>
        public float[] TownFPS;

        /// <summary>
        /// BattleSvr FPS
        /// </summary>
        public float[] BattleFPS;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(OnlinePlayerNum, Endianness.Big);
            buffer.WriteInt32(PlayerInTown, Endianness.Big);
            buffer.WriteInt32(PlayerInBattle, Endianness.Big);
            buffer.WriteInt32(ActiveInstanceCount, Endianness.Big);
            buffer.WriteInt32(PlayerInWaitQueue, Endianness.Big);
            buffer.WriteFloat(WorldFPS, Endianness.Big);
            for (int i = 0; i < TownFPS.Length; i++)
            {
                buffer.WriteFloat(TownFPS[i], Endianness.Big);
            }
            for (int i = 0; i < BattleFPS.Length; i++)
            {
                buffer.WriteFloat(BattleFPS[i], Endianness.Big);
            }
        }

        public void Read(IBuffer buffer)
        {
            OnlinePlayerNum = buffer.ReadInt32(Endianness.Big);
            PlayerInTown = buffer.ReadInt32(Endianness.Big);
            PlayerInBattle = buffer.ReadInt32(Endianness.Big);
            ActiveInstanceCount = buffer.ReadInt32(Endianness.Big);
            PlayerInWaitQueue = buffer.ReadInt32(Endianness.Big);
            WorldFPS = buffer.ReadFloat(Endianness.Big);
            for (int i = 0; i < TownFPS.Length; i++)
            {
                TownFPS[i] = buffer.ReadFloat(Endianness.Big);
            }
            for (int i = 0; i < BattleFPS.Length; i++)
            {
                BattleFPS[i] = buffer.ReadFloat(Endianness.Big);
            }
        }

    }
}
