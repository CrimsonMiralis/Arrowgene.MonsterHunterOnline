/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 猎团团员
    /// </summary>
    public class CSGuilder : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSGuilder));

        public CSGuilder()
        {
            Id = new CSRole();
            Note = "";
            Level = 0;
            HunterStar = "";
            IsOnline = 0;
            Contribution = 0;
            ContributionAcc = 0;
            Wage = 0;
            Title = 0;
            OfflineTime = 0;
            DepotOpCount = 0;
            HRLevel = 0;
            JoinTime = 0;
            CelebrationScore = 0;
            CelebrationTask = 0;
            PreCelebrationTask = 0;
            CelebrationRewardType = 0;
            ContributionWeekAcc = 0;
            LevelupAll = 0;
            HunterCount = 0;
            TaskCount = 0;
            IsBaned = 0;
            BanedTime = 0;
            GuildWar = new CSGuilderWarInfo();
        }

        /// <summary>
        /// 标识
        /// </summary>
        public CSRole Id;

        /// <summary>
        /// 注释
        /// </summary>
        public string Note;

        /// <summary>
        /// 等级
        /// </summary>
        public int Level;

        /// <summary>
        /// 猎人星级
        /// </summary>
        public string HunterStar;

        /// <summary>
        /// 在线?
        /// </summary>
        public byte IsOnline;

        /// <summary>
        /// 贡献度
        /// </summary>
        public int Contribution;

        /// <summary>
        /// 累计贡献度
        /// </summary>
        public ulong ContributionAcc;

        /// <summary>
        /// 工资
        /// </summary>
        public int Wage;

        /// <summary>
        /// 头衔
        /// </summary>
        public int Title;

        /// <summary>
        /// 离线时间
        /// </summary>
        public uint OfflineTime;

        /// <summary>
        /// 猎团仓库操作次数
        /// </summary>
        public int DepotOpCount;

        /// <summary>
        /// HR等级
        /// </summary>
        public int HRLevel;

        /// <summary>
        /// 加入猎团时间
        /// </summary>
        public uint JoinTime;

        /// <summary>
        /// 本期庆典积分
        /// </summary>
        public uint CelebrationScore;

        /// <summary>
        /// 庆典任务星级
        /// </summary>
        public uint CelebrationTask;

        /// <summary>
        /// 上次庆典任务星级
        /// </summary>
        public uint PreCelebrationTask;

        /// <summary>
        /// 庆典奖励字段
        /// </summary>
        public uint CelebrationRewardType;

        /// <summary>
        /// 周累计贡献度
        /// </summary>
        public int ContributionWeekAcc;

        /// <summary>
        /// 总升级等级
        /// </summary>
        public int LevelupAll;

        /// <summary>
        /// 狩猎次数
        /// </summary>
        public int HunterCount;

        /// <summary>
        /// 任务次数
        /// </summary>
        public int TaskCount;

        /// <summary>
        /// 是否被禁言
        /// </summary>
        public int IsBaned;

        /// <summary>
        /// 禁言到期时间
        /// </summary>
        public int BanedTime;

        /// <summary>
        /// 猎团战信息
        /// </summary>
        public CSGuilderWarInfo GuildWar;

        public void WriteCs(IBuffer buffer)
        {
            Id.WriteCs(buffer);
            buffer.WriteInt32(Note.Length + 1, Endianness.Big);
            buffer.WriteCString(Note);
            buffer.WriteInt32(Level, Endianness.Big);
            buffer.WriteInt32(HunterStar.Length + 1, Endianness.Big);
            buffer.WriteCString(HunterStar);
            buffer.WriteByte(IsOnline);
            buffer.WriteInt32(Contribution, Endianness.Big);
            buffer.WriteUInt64(ContributionAcc, Endianness.Big);
            buffer.WriteInt32(Wage, Endianness.Big);
            buffer.WriteInt32(Title, Endianness.Big);
            buffer.WriteUInt32(OfflineTime, Endianness.Big);
            buffer.WriteInt32(DepotOpCount, Endianness.Big);
            buffer.WriteInt32(HRLevel, Endianness.Big);
            buffer.WriteUInt32(JoinTime, Endianness.Big);
            buffer.WriteUInt32(CelebrationScore, Endianness.Big);
            buffer.WriteUInt32(CelebrationTask, Endianness.Big);
            buffer.WriteUInt32(PreCelebrationTask, Endianness.Big);
            buffer.WriteUInt32(CelebrationRewardType, Endianness.Big);
            buffer.WriteInt32(ContributionWeekAcc, Endianness.Big);
            buffer.WriteInt32(LevelupAll, Endianness.Big);
            buffer.WriteInt32(HunterCount, Endianness.Big);
            buffer.WriteInt32(TaskCount, Endianness.Big);
            buffer.WriteInt32(IsBaned, Endianness.Big);
            buffer.WriteInt32(BanedTime, Endianness.Big);
            GuildWar.WriteCs(buffer);
        }

        public void ReadCs(IBuffer buffer)
        {
            Id.ReadCs(buffer);
            int NoteEntryLen = buffer.ReadInt32(Endianness.Big);
            Note = buffer.ReadString(NoteEntryLen);
            Level = buffer.ReadInt32(Endianness.Big);
            int HunterStarEntryLen = buffer.ReadInt32(Endianness.Big);
            HunterStar = buffer.ReadString(HunterStarEntryLen);
            IsOnline = buffer.ReadByte();
            Contribution = buffer.ReadInt32(Endianness.Big);
            ContributionAcc = buffer.ReadUInt64(Endianness.Big);
            Wage = buffer.ReadInt32(Endianness.Big);
            Title = buffer.ReadInt32(Endianness.Big);
            OfflineTime = buffer.ReadUInt32(Endianness.Big);
            DepotOpCount = buffer.ReadInt32(Endianness.Big);
            HRLevel = buffer.ReadInt32(Endianness.Big);
            JoinTime = buffer.ReadUInt32(Endianness.Big);
            CelebrationScore = buffer.ReadUInt32(Endianness.Big);
            CelebrationTask = buffer.ReadUInt32(Endianness.Big);
            PreCelebrationTask = buffer.ReadUInt32(Endianness.Big);
            CelebrationRewardType = buffer.ReadUInt32(Endianness.Big);
            ContributionWeekAcc = buffer.ReadInt32(Endianness.Big);
            LevelupAll = buffer.ReadInt32(Endianness.Big);
            HunterCount = buffer.ReadInt32(Endianness.Big);
            TaskCount = buffer.ReadInt32(Endianness.Big);
            IsBaned = buffer.ReadInt32(Endianness.Big);
            BanedTime = buffer.ReadInt32(Endianness.Big);
            GuildWar.ReadCs(buffer);
        }

    }
}
