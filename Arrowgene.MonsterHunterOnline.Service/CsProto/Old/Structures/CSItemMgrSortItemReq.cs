/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 请求整理排序物品
    /// </summary>
    public class CSItemMgrSortItemReq : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSItemMgrSortItemReq));

        public CSItemMgrSortItemReq()
        {
            ItemColumn = 0;
            ItemBegGrid = 0;
            ItemEndGrid = 0;
            MoveSeq = 0;
            SwapSeq = 0;
            AddSeq = 0;
            DelSeq = 0;
            ItemLocList = new List<CSItemMgrItemLoc>();
        }

        /// <summary>
        /// 栏位
        /// </summary>
        public byte ItemColumn;

        /// <summary>
        /// 起始格子
        /// </summary>
        public ushort ItemBegGrid;

        /// <summary>
        /// 截至格子
        /// </summary>
        public ushort ItemEndGrid;

        /// <summary>
        /// seql1
        /// </summary>
        public int MoveSeq;

        /// <summary>
        /// seql2
        /// </summary>
        public int SwapSeq;

        /// <summary>
        /// seql3
        /// </summary>
        public int AddSeq;

        /// <summary>
        /// seql4
        /// </summary>
        public int DelSeq;

        /// <summary>
        /// 排序列表
        /// </summary>
        public List<CSItemMgrItemLoc> ItemLocList;

        public void Write(IBuffer buffer)
        {
            buffer.WriteByte(ItemColumn);
            buffer.WriteUInt16(ItemBegGrid, Endianness.Big);
            buffer.WriteUInt16(ItemEndGrid, Endianness.Big);
            buffer.WriteInt32(MoveSeq, Endianness.Big);
            buffer.WriteInt32(SwapSeq, Endianness.Big);
            buffer.WriteInt32(AddSeq, Endianness.Big);
            buffer.WriteInt32(DelSeq, Endianness.Big);
            ushort itemLocListCount = (ushort)ItemLocList.Count;
            buffer.WriteUInt16(itemLocListCount, Endianness.Big);
            for (int i = 0; i < itemLocListCount; i++)
            {
                ItemLocList[i].Write(buffer);
            }
        }

        public void Read(IBuffer buffer)
        {
            ItemColumn = buffer.ReadByte();
            ItemBegGrid = buffer.ReadUInt16(Endianness.Big);
            ItemEndGrid = buffer.ReadUInt16(Endianness.Big);
            MoveSeq = buffer.ReadInt32(Endianness.Big);
            SwapSeq = buffer.ReadInt32(Endianness.Big);
            AddSeq = buffer.ReadInt32(Endianness.Big);
            DelSeq = buffer.ReadInt32(Endianness.Big);
            ItemLocList.Clear();
            ushort itemLocListCount = buffer.ReadUInt16(Endianness.Big);
            for (int i = 0; i < itemLocListCount; i++)
            {
                CSItemMgrItemLoc ItemLocListEntry = new CSItemMgrItemLoc();
                ItemLocListEntry.Read(buffer);
                ItemLocList.Add(ItemLocListEntry);
            }
        }

    }
}
