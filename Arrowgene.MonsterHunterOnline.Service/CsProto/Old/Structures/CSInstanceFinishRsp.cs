/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 副本结束响应
    /// </summary>
    public class CSInstanceFinishRsp : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSInstanceFinishRsp));

        public CSInstanceFinishRsp()
        {
            ShowFlag = 0;
            LastKillBossID = 0;
            LastCaptureBossID = 0;
            WinFlag = 0;
            WinLoseReason = 0;
            EnemyWinFlag = 0;
            CountDownSeconds = 0;
            PvpLastGetScorePlayerNetID = 0;
            TimeOut = 0;
            LastKillPlayerID = 0;
            LastBeKilledPlayerID = 0;
        }

        /// <summary>
        /// 是否进入倒计时流程
        /// </summary>
        public int ShowFlag;

        /// <summary>
        /// 最后被击杀的BOSSID
        /// </summary>
        public int LastKillBossID;

        /// <summary>
        /// 最后被捕获的BOSSID
        /// </summary>
        public int LastCaptureBossID;

        /// <summary>
        /// 胜利标识
        /// </summary>
        public int WinFlag;

        /// <summary>
        /// 胜负原因
        /// </summary>
        public int WinLoseReason;

        /// <summary>
        /// 胜利标识
        /// </summary>
        public int EnemyWinFlag;

        /// <summary>
        /// 倒计时时间单位秒
        /// </summary>
        public int CountDownSeconds;

        /// <summary>
        /// PVP最后得分导致关卡结束的玩家ID
        /// </summary>
        public int PvpLastGetScorePlayerNetID;

        /// <summary>
        /// 关卡是否超时结束
        /// </summary>
        public int TimeOut;

        /// <summary>
        /// 最后击杀的玩家
        /// </summary>
        public int LastKillPlayerID;

        /// <summary>
        /// 最后被击杀的玩家
        /// </summary>
        public int LastBeKilledPlayerID;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt32(ShowFlag, Endianness.Big);
            buffer.WriteInt32(LastKillBossID, Endianness.Big);
            buffer.WriteInt32(LastCaptureBossID, Endianness.Big);
            buffer.WriteInt32(WinFlag, Endianness.Big);
            buffer.WriteInt32(WinLoseReason, Endianness.Big);
            buffer.WriteInt32(EnemyWinFlag, Endianness.Big);
            buffer.WriteInt32(CountDownSeconds, Endianness.Big);
            buffer.WriteInt32(PvpLastGetScorePlayerNetID, Endianness.Big);
            buffer.WriteInt32(TimeOut, Endianness.Big);
            buffer.WriteInt32(LastKillPlayerID, Endianness.Big);
            buffer.WriteInt32(LastBeKilledPlayerID, Endianness.Big);
        }

        public void ReadCs(IBuffer buffer)
        {
            ShowFlag = buffer.ReadInt32(Endianness.Big);
            LastKillBossID = buffer.ReadInt32(Endianness.Big);
            LastCaptureBossID = buffer.ReadInt32(Endianness.Big);
            WinFlag = buffer.ReadInt32(Endianness.Big);
            WinLoseReason = buffer.ReadInt32(Endianness.Big);
            EnemyWinFlag = buffer.ReadInt32(Endianness.Big);
            CountDownSeconds = buffer.ReadInt32(Endianness.Big);
            PvpLastGetScorePlayerNetID = buffer.ReadInt32(Endianness.Big);
            TimeOut = buffer.ReadInt32(Endianness.Big);
            LastKillPlayerID = buffer.ReadInt32(Endianness.Big);
            LastBeKilledPlayerID = buffer.ReadInt32(Endianness.Big);
        }

    }
}
