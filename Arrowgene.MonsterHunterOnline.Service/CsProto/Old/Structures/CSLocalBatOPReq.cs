/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 客户端本地副本请求
    /// </summary>
    public class CSLocalBatOPReq : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSLocalBatOPReq));

        public CSLocalBatOPReq()
        {
            Op = 0;
            Param1 = 0;
            Param2 = 0;
            Param3 = 0;
            Param4 = 0;
            ParamStr = "";
        }

        /// <summary>
        /// Op
        /// </summary>
        public int Op;

        /// <summary>
        /// Param1
        /// </summary>
        public int Param1;

        /// <summary>
        /// Param2
        /// </summary>
        public int Param2;

        /// <summary>
        /// Param3
        /// </summary>
        public int Param3;

        /// <summary>
        /// Param4
        /// </summary>
        public int Param4;

        /// <summary>
        /// 字符数据
        /// </summary>
        public string ParamStr;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt32(Op, Endianness.Big);
            buffer.WriteInt32(Param1, Endianness.Big);
            buffer.WriteInt32(Param2, Endianness.Big);
            buffer.WriteInt32(Param3, Endianness.Big);
            buffer.WriteInt32(Param4, Endianness.Big);
            buffer.WriteInt32(ParamStr.Length + 1, Endianness.Big);
            buffer.WriteCString(ParamStr);
        }

        public void ReadCs(IBuffer buffer)
        {
            Op = buffer.ReadInt32(Endianness.Big);
            Param1 = buffer.ReadInt32(Endianness.Big);
            Param2 = buffer.ReadInt32(Endianness.Big);
            Param3 = buffer.ReadInt32(Endianness.Big);
            Param4 = buffer.ReadInt32(Endianness.Big);
            int ParamStrEntryLen = buffer.ReadInt32(Endianness.Big);
            ParamStr = buffer.ReadString(ParamStrEntryLen);
        }

    }
}
