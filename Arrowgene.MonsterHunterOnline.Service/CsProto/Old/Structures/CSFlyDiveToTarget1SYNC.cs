/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 击飞事件同步
    /// </summary>
    public class CSFlyDiveToTarget1SYNC : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSFlyDiveToTarget1SYNC));

        public CSFlyDiveToTarget1SYNC()
        {
            SyncTime = 0;
            EntityId = 0;
            PosB = new CSVec3();
            PosC = new CSVec3();
            PosD = new CSVec3();
            TotalTime = 0.0f;
        }

        /// <summary>
        /// 同步时间
        /// </summary>
        public long SyncTime;

        /// <summary>
        /// 需要同步的Monster的NetObjId
        /// </summary>
        public uint EntityId;

        /// <summary>
        /// 俯冲拐点
        /// </summary>
        public CSVec3 PosB;

        /// <summary>
        /// 抬升拐点
        /// </summary>
        public CSVec3 PosC;

        /// <summary>
        /// 终结点
        /// </summary>
        public CSVec3 PosD;

        /// <summary>
        /// 重力值修改
        /// </summary>
        public float TotalTime;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt64(SyncTime, Endianness.Big);
            buffer.WriteUInt32(EntityId, Endianness.Big);
            PosB.WriteCs(buffer);
            PosC.WriteCs(buffer);
            PosD.WriteCs(buffer);
            buffer.WriteFloat(TotalTime, Endianness.Big);
        }

        public void ReadCs(IBuffer buffer)
        {
            SyncTime = buffer.ReadInt64(Endianness.Big);
            EntityId = buffer.ReadUInt32(Endianness.Big);
            PosB.ReadCs(buffer);
            PosC.ReadCs(buffer);
            PosD.ReadCs(buffer);
            TotalTime = buffer.ReadFloat(Endianness.Big);
        }

    }
}
