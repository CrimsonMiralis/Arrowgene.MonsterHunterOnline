/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 微信支付URL
    /// </summary>
    public class CSWxPayUrl : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSWxPayUrl));

        public CSWxPayUrl()
        {
            Ret = 0;
            PayUrl = "";
            OrderID = 0;
            SrcMod = 0;
            SrcSubMod = 0;
            SrcID = 0;
            GoodsID = 0;
            GoodsNum = 0;
            Price = 0;
            BindCredit = 0;
            Limit = 0;
            ReUse = 0;
        }

        public int Ret;

        /// <summary>
        /// 返回url
        /// </summary>
        public string PayUrl;

        /// <summary>
        /// 订单ID
        /// </summary>
        public ulong OrderID;

        /// <summary>
        /// 支付来源模块 SS_PAY_SOURCE_MODULE_MART
        /// </summary>
        public int SrcMod;

        /// <summary>
        /// 支付来源子模块
        /// </summary>
        public int SrcSubMod;

        /// <summary>
        /// 支付发起方支付索引，支付响应中会带回
        /// </summary>
        public uint SrcID;

        /// <summary>
        /// 发货物品ID
        /// </summary>
        public uint GoodsID;

        /// <summary>
        /// 发货物品数量
        /// </summary>
        public uint GoodsNum;

        /// <summary>
        /// 支付费用
        /// </summary>
        public int Price;

        /// <summary>
        /// 同时支付的猎币
        /// </summary>
        public int BindCredit;

        /// <summary>
        /// 是否限购，未关闭的限购类订单同一时间只能存在一份
        /// </summary>
        public byte Limit;

        /// <summary>
        /// 重新发送的URL
        /// </summary>
        public byte ReUse;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt32(Ret, Endianness.Big);
            buffer.WriteInt32(PayUrl.Length + 1, Endianness.Big);
            buffer.WriteCString(PayUrl);
            buffer.WriteUInt64(OrderID, Endianness.Big);
            buffer.WriteInt32(SrcMod, Endianness.Big);
            buffer.WriteInt32(SrcSubMod, Endianness.Big);
            buffer.WriteUInt32(SrcID, Endianness.Big);
            buffer.WriteUInt32(GoodsID, Endianness.Big);
            buffer.WriteUInt32(GoodsNum, Endianness.Big);
            buffer.WriteInt32(Price, Endianness.Big);
            buffer.WriteInt32(BindCredit, Endianness.Big);
            buffer.WriteByte(Limit);
            buffer.WriteByte(ReUse);
        }

        public void ReadCs(IBuffer buffer)
        {
            Ret = buffer.ReadInt32(Endianness.Big);
            int PayUrlEntryLen = buffer.ReadInt32(Endianness.Big);
            PayUrl = buffer.ReadString(PayUrlEntryLen);
            OrderID = buffer.ReadUInt64(Endianness.Big);
            SrcMod = buffer.ReadInt32(Endianness.Big);
            SrcSubMod = buffer.ReadInt32(Endianness.Big);
            SrcID = buffer.ReadUInt32(Endianness.Big);
            GoodsID = buffer.ReadUInt32(Endianness.Big);
            GoodsNum = buffer.ReadUInt32(Endianness.Big);
            Price = buffer.ReadInt32(Endianness.Big);
            BindCredit = buffer.ReadInt32(Endianness.Big);
            Limit = buffer.ReadByte();
            ReUse = buffer.ReadByte();
        }

    }
}
