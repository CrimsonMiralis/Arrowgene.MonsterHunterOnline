/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 商品信息更新
    /// </summary>
    public class CSMartGoodsInfoUpdate : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSMartGoodsInfoUpdate));

        public CSMartGoodsInfoUpdate()
        {
            ID = 0;
            GroupID = 0;
            Name = "";
            PayType = 0;
            FuncID = 0;
            FuncParam = 0;
            ItemID = 0;
            ItemNum = 0;
            LimitTime = 0;
            Type = 0;
            SubType = 0;
            Flag = 0;
            Recommend = 0;
            VIPLimit = 0;
            Price = 0;
            CutPrice = 0;
            VIPCutPrice = 0;
            Coin = 0;
            Card = 0;
            Gift = 0;
            AutoUse = 0;
            BeginTime = "";
            EndTime = "";
            NumLimit = 0;
            PeriodLimit = 0;
            IsShow = 0;
            Icon = "";
            BtlSvrLimit = 0;
            VipLevel = 0;
            QQMask = 0;
            LevelLimit = 0;
            Sort = 0;
            AddVipExp = 0;
            WxID = 0;
            IsVIPGoods = 0;
            Ver = 0;
            IconFemale = "";
            SexLimit = 0;
        }

        /// <summary>
        /// 商品ID
        /// </summary>
        public int ID;

        /// <summary>
        /// GroupID
        /// </summary>
        public int GroupID;

        /// <summary>
        /// 商品名称
        /// </summary>
        public string Name;

        /// <summary>
        /// 结算类型
        /// </summary>
        public byte PayType;

        /// <summary>
        /// 功能ID
        /// </summary>
        public int FuncID;

        /// <summary>
        /// 功能参数
        /// </summary>
        public int FuncParam;

        /// <summary>
        /// 物品ID
        /// </summary>
        public int ItemID;

        /// <summary>
        /// 物品数量
        /// </summary>
        public int ItemNum;

        /// <summary>
        /// 时效，单位秒.0为无时效
        /// </summary>
        public int LimitTime;

        /// <summary>
        /// 类型
        /// </summary>
        public byte Type;

        /// <summary>
        /// 子类型
        /// </summary>
        public byte SubType;

        /// <summary>
        /// 销售标志
        /// </summary>
        public byte Flag;

        /// <summary>
        /// 是否推荐
        /// </summary>
        public byte Recommend;

        /// <summary>
        /// 是否仅会员可购
        /// </summary>
        public byte VIPLimit;

        /// <summary>
        /// 价格
        /// </summary>
        public int Price;

        /// <summary>
        /// 折扣
        /// </summary>
        public int CutPrice;

        /// <summary>
        /// 会员折扣
        /// </summary>
        public int VIPCutPrice;

        /// <summary>
        /// 是否可用猎币
        /// </summary>
        public byte Coin;

        /// <summary>
        /// 是否可用打折卡
        /// </summary>
        public byte Card;

        /// <summary>
        /// 是否可赠送索取
        /// </summary>
        public byte Gift;

        /// <summary>
        /// 是否购买自动使用
        /// </summary>
        public byte AutoUse;

        /// <summary>
        /// 开始时间
        /// </summary>
        public string BeginTime;

        /// <summary>
        /// 结束时间
        /// </summary>
        public string EndTime;

        /// <summary>
        /// 购买上限
        /// </summary>
        public int NumLimit;

        /// <summary>
        /// 购买周期
        /// </summary>
        public byte PeriodLimit;

        /// <summary>
        /// 是否显示在商城列表中，仅当有group不为0时有效。GROUP为0默认都显示
        /// </summary>
        public byte IsShow;

        /// <summary>
        /// icon
        /// </summary>
        public string Icon;

        /// <summary>
        /// BtlSvr不可买
        /// </summary>
        public byte BtlSvrLimit;

        /// <summary>
        /// VIP等级限制
        /// </summary>
        public int VipLevel;

        /// <summary>
        /// QQ会员限制
        /// </summary>
        public int QQMask;

        /// <summary>
        /// 人物等级限制
        /// </summary>
        public int LevelLimit;

        /// <summary>
        /// 排序参数
        /// </summary>
        public int Sort;

        /// <summary>
        /// 增加VIP经验
        /// </summary>
        public int AddVipExp;

        /// <summary>
        /// 微信支付信息
        /// </summary>
        public int WxID;

        /// <summary>
        /// 是否是VIP物品
        /// </summary>
        public byte IsVIPGoods;

        /// <summary>
        /// 商品版本号
        /// </summary>
        public int Ver;

        /// <summary>
        /// IconFemale
        /// </summary>
        public string IconFemale;

        /// <summary>
        /// 性别限制
        /// </summary>
        public int SexLimit;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(ID, Endianness.Big);
            buffer.WriteInt32(GroupID, Endianness.Big);
            buffer.WriteInt32(Name.Length + 1, Endianness.Big);
            buffer.WriteCString(Name);
            buffer.WriteByte(PayType);
            buffer.WriteInt32(FuncID, Endianness.Big);
            buffer.WriteInt32(FuncParam, Endianness.Big);
            buffer.WriteInt32(ItemID, Endianness.Big);
            buffer.WriteInt32(ItemNum, Endianness.Big);
            buffer.WriteInt32(LimitTime, Endianness.Big);
            buffer.WriteByte(Type);
            buffer.WriteByte(SubType);
            buffer.WriteByte(Flag);
            buffer.WriteByte(Recommend);
            buffer.WriteByte(VIPLimit);
            buffer.WriteInt32(Price, Endianness.Big);
            buffer.WriteInt32(CutPrice, Endianness.Big);
            buffer.WriteInt32(VIPCutPrice, Endianness.Big);
            buffer.WriteByte(Coin);
            buffer.WriteByte(Card);
            buffer.WriteByte(Gift);
            buffer.WriteByte(AutoUse);
            buffer.WriteInt32(BeginTime.Length + 1, Endianness.Big);
            buffer.WriteCString(BeginTime);
            buffer.WriteInt32(EndTime.Length + 1, Endianness.Big);
            buffer.WriteCString(EndTime);
            buffer.WriteInt32(NumLimit, Endianness.Big);
            buffer.WriteByte(PeriodLimit);
            buffer.WriteByte(IsShow);
            buffer.WriteInt32(Icon.Length + 1, Endianness.Big);
            buffer.WriteCString(Icon);
            buffer.WriteByte(BtlSvrLimit);
            buffer.WriteInt32(VipLevel, Endianness.Big);
            buffer.WriteInt32(QQMask, Endianness.Big);
            buffer.WriteInt32(LevelLimit, Endianness.Big);
            buffer.WriteInt32(Sort, Endianness.Big);
            buffer.WriteInt32(AddVipExp, Endianness.Big);
            buffer.WriteInt32(WxID, Endianness.Big);
            buffer.WriteByte(IsVIPGoods);
            buffer.WriteInt32(Ver, Endianness.Big);
            buffer.WriteInt32(IconFemale.Length + 1, Endianness.Big);
            buffer.WriteCString(IconFemale);
            buffer.WriteInt32(SexLimit, Endianness.Big);
        }

        public void Read(IBuffer buffer)
        {
            ID = buffer.ReadInt32(Endianness.Big);
            GroupID = buffer.ReadInt32(Endianness.Big);
            int NameEntryLen = buffer.ReadInt32(Endianness.Big);
            Name = buffer.ReadString(NameEntryLen);
            PayType = buffer.ReadByte();
            FuncID = buffer.ReadInt32(Endianness.Big);
            FuncParam = buffer.ReadInt32(Endianness.Big);
            ItemID = buffer.ReadInt32(Endianness.Big);
            ItemNum = buffer.ReadInt32(Endianness.Big);
            LimitTime = buffer.ReadInt32(Endianness.Big);
            Type = buffer.ReadByte();
            SubType = buffer.ReadByte();
            Flag = buffer.ReadByte();
            Recommend = buffer.ReadByte();
            VIPLimit = buffer.ReadByte();
            Price = buffer.ReadInt32(Endianness.Big);
            CutPrice = buffer.ReadInt32(Endianness.Big);
            VIPCutPrice = buffer.ReadInt32(Endianness.Big);
            Coin = buffer.ReadByte();
            Card = buffer.ReadByte();
            Gift = buffer.ReadByte();
            AutoUse = buffer.ReadByte();
            int BeginTimeEntryLen = buffer.ReadInt32(Endianness.Big);
            BeginTime = buffer.ReadString(BeginTimeEntryLen);
            int EndTimeEntryLen = buffer.ReadInt32(Endianness.Big);
            EndTime = buffer.ReadString(EndTimeEntryLen);
            NumLimit = buffer.ReadInt32(Endianness.Big);
            PeriodLimit = buffer.ReadByte();
            IsShow = buffer.ReadByte();
            int IconEntryLen = buffer.ReadInt32(Endianness.Big);
            Icon = buffer.ReadString(IconEntryLen);
            BtlSvrLimit = buffer.ReadByte();
            VipLevel = buffer.ReadInt32(Endianness.Big);
            QQMask = buffer.ReadInt32(Endianness.Big);
            LevelLimit = buffer.ReadInt32(Endianness.Big);
            Sort = buffer.ReadInt32(Endianness.Big);
            AddVipExp = buffer.ReadInt32(Endianness.Big);
            WxID = buffer.ReadInt32(Endianness.Big);
            IsVIPGoods = buffer.ReadByte();
            Ver = buffer.ReadInt32(Endianness.Big);
            int IconFemaleEntryLen = buffer.ReadInt32(Endianness.Big);
            IconFemale = buffer.ReadString(IconFemaleEntryLen);
            SexLimit = buffer.ReadInt32(Endianness.Big);
        }

    }
}
