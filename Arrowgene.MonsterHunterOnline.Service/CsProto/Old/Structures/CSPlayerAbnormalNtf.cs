/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 玩家异常状态buff上报
    /// </summary>
    public class CSPlayerAbnormalNtf : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSPlayerAbnormalNtf));

        public CSPlayerAbnormalNtf()
        {
            FirstBuffId = 0;
            FirstBuffOwner = 0;
            SecondBuffId = 0;
            SecondBuffOwner = 0;
            change = 0;
            hittype = 0;
            result = 0;
            param1 = 0;
        }

        /// <summary>
        /// 立即触发的异常状态buffID
        /// </summary>
        public int FirstBuffId;

        /// <summary>
        /// 立即触发的异常状态buff施放者
        /// </summary>
        public int FirstBuffOwner;

        /// <summary>
        /// 延时触发的异常状态buffID
        /// </summary>
        public int SecondBuffId;

        /// <summary>
        /// 延时触发的异常状态buff施放者
        /// </summary>
        public int SecondBuffOwner;

        /// <summary>
        /// 是否有改变
        /// </summary>
        public byte change;

        /// <summary>
        /// 异常状态
        /// </summary>
        public int hittype;

        /// <summary>
        /// 结果
        /// </summary>
        public int result;

        /// <summary>
        /// 参数1
        /// </summary>
        public int param1;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt32(FirstBuffId, Endianness.Big);
            buffer.WriteInt32(FirstBuffOwner, Endianness.Big);
            buffer.WriteInt32(SecondBuffId, Endianness.Big);
            buffer.WriteInt32(SecondBuffOwner, Endianness.Big);
            buffer.WriteByte(change);
            buffer.WriteInt32(hittype, Endianness.Big);
            buffer.WriteInt32(result, Endianness.Big);
            buffer.WriteInt32(param1, Endianness.Big);
        }

        public void ReadCs(IBuffer buffer)
        {
            FirstBuffId = buffer.ReadInt32(Endianness.Big);
            FirstBuffOwner = buffer.ReadInt32(Endianness.Big);
            SecondBuffId = buffer.ReadInt32(Endianness.Big);
            SecondBuffOwner = buffer.ReadInt32(Endianness.Big);
            change = buffer.ReadByte();
            hittype = buffer.ReadInt32(Endianness.Big);
            result = buffer.ReadInt32(Endianness.Big);
            param1 = buffer.ReadInt32(Endianness.Big);
        }

    }
}
