/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 副本综合信息
    /// </summary>
    public class PlayerLevelIntegrateInfo : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(PlayerLevelIntegrateInfo));

        public PlayerLevelIntegrateInfo()
        {
            LevelID = 0;
            TheBestScore = 0;
            State = 0;
            HistoryFinalRank = 0;
            GainRewardFlag = 0;
            LastTm = 0;
        }

        /// <summary>
        /// 副本ID
        /// </summary>
        public int LevelID;

        /// <summary>
        /// 历史最好成绩
        /// </summary>
        public int TheBestScore;

        /// <summary>
        /// 历史状态，没有进去过，进去过但是没有过关，胜利过，失败
        /// </summary>
        public byte State;

        /// <summary>
        /// 历史评价成绩，按位统计
        /// </summary>
        public uint HistoryFinalRank;

        /// <summary>
        /// 历史成绩对应的领取与否的FLAG,按位统计
        /// </summary>
        public uint GainRewardFlag;

        /// <summary>
        /// 最近时间
        /// </summary>
        public uint LastTm;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(LevelID, Endianness.Big);
            buffer.WriteInt32(TheBestScore, Endianness.Big);
            buffer.WriteByte(State);
            buffer.WriteUInt32(HistoryFinalRank, Endianness.Big);
            buffer.WriteUInt32(GainRewardFlag, Endianness.Big);
            buffer.WriteUInt32(LastTm, Endianness.Big);
        }

        public void Read(IBuffer buffer)
        {
            LevelID = buffer.ReadInt32(Endianness.Big);
            TheBestScore = buffer.ReadInt32(Endianness.Big);
            State = buffer.ReadByte();
            HistoryFinalRank = buffer.ReadUInt32(Endianness.Big);
            GainRewardFlag = buffer.ReadUInt32(Endianness.Big);
            LastTm = buffer.ReadUInt32(Endianness.Big);
        }

    }
}
