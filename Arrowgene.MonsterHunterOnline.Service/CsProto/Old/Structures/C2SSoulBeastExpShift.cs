/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    public class C2SSoulBeastExpShift : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(C2SSoulBeastExpShift));

        public C2SSoulBeastExpShift()
        {
            SrcBeast = 0;
            DstBeast = 0;
            UseItem = 0;
        }

        /// <summary>
        /// 源兽
        /// </summary>
        public int SrcBeast;

        /// <summary>
        /// 目标兽
        /// </summary>
        public int DstBeast;

        /// <summary>
        /// 0：猎币、点券；1：免费道具
        /// </summary>
        public int UseItem;

        public void Write(IBuffer buffer)
        {
            buffer.WriteInt32(SrcBeast, Endianness.Big);
            buffer.WriteInt32(DstBeast, Endianness.Big);
            buffer.WriteInt32(UseItem, Endianness.Big);
        }

        public void Read(IBuffer buffer)
        {
            SrcBeast = buffer.ReadInt32(Endianness.Big);
            DstBeast = buffer.ReadInt32(Endianness.Big);
            UseItem = buffer.ReadInt32(Endianness.Big);
        }

    }
}
