/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 杀死怪物产生采集点事件同步
    /// </summary>
    public class CSSpawnCollectTrigSYNC : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSSpawnCollectTrigSYNC));

        public CSSpawnCollectTrigSYNC()
        {
            ItemID = 0;
            BoxParam = new CSVec3();
            TriggerType = "";
            Position = new CSVec3();
            Rotation = new CSQuat();
            RelativeID = 0;
        }

        /// <summary>
        /// 需要同步的生成物品的ID
        /// </summary>
        public int ItemID;

        /// <summary>
        /// Trigger的大小
        /// </summary>
        public CSVec3 BoxParam;

        /// <summary>
        /// Trigger的类型名称
        /// </summary>
        public string TriggerType;

        /// <summary>
        /// Trigger的位置
        /// </summary>
        public CSVec3 Position;

        /// <summary>
        /// Trigger的旋转
        /// </summary>
        public CSQuat Rotation;

        /// <summary>
        /// 需要参考的Monster的NetObjId
        /// </summary>
        public uint RelativeID;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteInt32(ItemID, Endianness.Big);
            BoxParam.WriteCs(buffer);
            buffer.WriteInt32(TriggerType.Length + 1, Endianness.Big);
            buffer.WriteCString(TriggerType);
            Position.WriteCs(buffer);
            Rotation.WriteCs(buffer);
            buffer.WriteUInt32(RelativeID, Endianness.Big);
        }

        public void ReadCs(IBuffer buffer)
        {
            ItemID = buffer.ReadInt32(Endianness.Big);
            BoxParam.ReadCs(buffer);
            int TriggerTypeEntryLen = buffer.ReadInt32(Endianness.Big);
            TriggerType = buffer.ReadString(TriggerTypeEntryLen);
            Position.ReadCs(buffer);
            Rotation.ReadCs(buffer);
            RelativeID = buffer.ReadUInt32(Endianness.Big);
        }

    }
}
