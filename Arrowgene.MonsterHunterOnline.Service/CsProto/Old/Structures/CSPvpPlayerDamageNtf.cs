/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 间接PVP 伤害通知
    /// </summary>
    public class CSPvpPlayerDamageNtf : ICsStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSPvpPlayerDamageNtf));

        public CSPvpPlayerDamageNtf()
        {
            AttackerNetID = 0;
            DefencerNetID = 0;
            Type = 0;
        }

        /// <summary>
        /// 攻击玩家NETID
        /// </summary>
        public uint AttackerNetID;

        /// <summary>
        /// 受击玩家NETID
        /// </summary>
        public uint DefencerNetID;

        /// <summary>
        /// 攻击类型
        /// </summary>
        public int Type;

        public void WriteCs(IBuffer buffer)
        {
            buffer.WriteUInt32(AttackerNetID, Endianness.Big);
            buffer.WriteUInt32(DefencerNetID, Endianness.Big);
            buffer.WriteInt32(Type, Endianness.Big);
        }

        public void ReadCs(IBuffer buffer)
        {
            AttackerNetID = buffer.ReadUInt32(Endianness.Big);
            DefencerNetID = buffer.ReadUInt32(Endianness.Big);
            Type = buffer.ReadInt32(Endianness.Big);
        }

    }
}
