/*
* This file is part of Arrowgene.MonsterHunterOnline
*
* Arrowgene.MonsterHunterOnline is a server implementation for the game "Monster Hunter Online".
* Copyright (C) 2023-2024 "all contributors"
*
* Github: https://github.com/sebastian-heinz/Arrowgene.MonsterHunterOnline
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Affero General Public License as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU Affero General Public License for more details.
*
*  You should have received a copy of the GNU Affero General Public License
*  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Logging;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Core;
using Arrowgene.MonsterHunterOnline.Service.CsProto.Enums;

namespace Arrowgene.MonsterHunterOnline.Service.CsProto.Structures
{

    /// <summary>
    /// 通用玩家扩展返回
    /// </summary>
    public class CSPlayerExtResult : IStructure
    {
        private static readonly ILogger Logger = LogProvider.Logger(typeof(CSPlayerExtResult));

        public CSPlayerExtResult(CSPlayerExtRequestData _Request, CSPlayerExtResultData _Result)
        {
            ResultCode = 0;
            Request = _Request;
            Result = _Result;
        }

        /// <summary>
        /// 玩家扩展类型
        /// </summary>

        /// <summary>
        /// 返回码
        /// </summary>
        public int ResultCode;

        /// <summary>
        /// 原始请求
        /// </summary>
        public CSPlayerExtRequestData Request;

        /// <summary>
        /// 返回数据
        /// </summary>
        public CSPlayerExtResultData Result;

        public void Write(IBuffer buffer)
        {
            buffer.WriteByte((byte)Result.ExtType);
            buffer.WriteInt32(ResultCode, Endianness.Big);
            Request.Write(buffer);
            Result.Write(buffer);
        }

        public void Read(IBuffer buffer)
        {
            CS_PLAYER_EXT_TYPE CSPlayerExtResultData_ExtType = (CS_PLAYER_EXT_TYPE)buffer.ReadByte();
            ResultCode = buffer.ReadInt32(Endianness.Big);
            switch (CSPlayerExtResultData_ExtType)
            {
                case CS_PLAYER_EXT_TYPE.CS_PLAYER_EXT_INTERACT:
                    Request = new CSInteractRequest(null);
                    break;
            }
            if (Request != null) {
                Request.Read(buffer);
            }
            else {
                Logger.Error("Failed to create 'Request' instance of type 'CSPlayerExtRequestData'");
            }
            switch (CSPlayerExtResultData_ExtType)
            {
                case CS_PLAYER_EXT_TYPE.CS_PLAYER_EXT_INTERACT:
                    Result = new CSActionPointData();
                    break;
            }
            if (Result != null) {
                Result.Read(buffer);
            }
            else {
                Logger.Error("Failed to create 'Result' instance of type 'CSPlayerExtResultData'");
            }
        }

    }
}
